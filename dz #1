1. Уровни тестирования можно воспринимать как уровень подготовки в спорте. Модульное тестирование - это общая физподготовка, основа основ без которой не получится «скелет» программы, а так же приемы и движения. Далее, когда минимум для игры освоен, спортсмен учится использовать движения в связке. Это интегрированное тестирование. Первые попытки игры, дружески матчи – все это системное тестирование. Ну и приемочное, это серьезный матч\раунд, где зрители – это те, кто принимает качество игры\боя.

Модульное – программисты, автотесты
Интегрированное – программист и тестировщик, чаще автоматически проверяются
Системное – тестировщик, ручное
Приемочное – Заказчик, ручное

Функциональное тестирование можно выполнять на любом уровне тестирования.

2.	Проверка работоспособоности старого функционала, как и функционала в целом после релиза нового функционала, который как либо взаимодействует, связан со старым функционалом. Поэтому при подготовке нового функционала достаточно проверить связи\пересечения, сократив трудозатраты на проверку системы в целом.  

3.	Проверка отдельных модулей исходного кода ПО. Обычно это автотесты, выполняются быстро, нет нагрузки и потому запускаются где угодно. Покрывают большую часть функциональности, но в связке компонент могут не отрабатывать, поэтому необходимы другие уровни проверки.

4.	На сколько крупный проект, какой на него спрос. Есть ли документация и спецификации. Уточнить тестировали ли ранее проект, возможно нужно оттестть только новый функционал. Нужна конкретная информация о проекте, чтобы оценить, а так же информация о сроках запуска, чтобы расставить приоритеты в работе.

5.	Под черным ящиком подразумевается закрытость устройства системы, то есть мы не имеем доступа к внутренней структуре компонентов системы, и составление кейсов основывается на требованиях и спецификациях. Во время тестирования мы не заглядываем дальше юзер интерфейса программы.

Невозможно:
Статическое тестирование

